@model List<IndexViewModel>

@{
    ViewBag.Title = "All Projects";
}

@section Styles
{
    @Styles.Render(@"~/data-tables/css")
}

@section Scripts
{
    @Scripts.Render(@"~/data-tables/js")
    <script type="text/javascript" src="~/Scripts/MyScripts/DataTablesProjectAll.js"></script>

    <!--! testing out C# List to JavaScript array -->
    <script type="text/javascript">
        const testString = "@Html.Raw(Model[0].Name)";
        const testArray = @Html.Raw(Json.Encode(Model));
        console.log("This is my string (Model[0].Name)");
        console.log(testString);
        console.log("This is my array Model objects");
        console.log(testArray);
    </script>
}

<div>
    <div class="card">
        <div class="header">
            <h4 class="title">@ViewBag.Title</h4>
            <p class="category">
                <a href="@Url.Action("Create")">
                    Create New Project
                    <i style="position: relative; top: 5px; font-weight: 500; font-size:25px;"
                       class="pe-7s-note"></i>
                </a>
            </p>
        </div>
        <div class="content">
            @if (Model.Any())
            {
                <table id="all-projects" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].UsersCount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].TicketCount)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].DateCreated)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].DateUpdated)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (IndexViewModel project in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => project.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => project.UsersCount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => project.TicketCount)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => project.DateCreated)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => project.DateUpdated)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = project.Id }) |
                                    @Html.ActionLink("Details", "Details", new { id = project.Id }) @*|
                                        @Html.ActionLink("Delete", "Delete", new { id = project.Id })*@
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

