@model List<IndexViewModel>

@{
    ViewBag.Title = "All Projects";
}

@section Styles
{
    @Styles.Render(@"~/data-tables/css")
}

@section Scripts
{
    @Scripts.Render(@"~/data-tables/js")
    <script type="text/javascript">
        /*x TODO: Get DataTables to work here! */
        $(document).ready(() => {
            $("#all-projects").DataTable();
            const search = $("#all-projects_filter").children("label").children("input");
            const pageBtn = $(".paginate_button");
            const dropdown = $("#all-projects_length").children("label").children("select");
            const projectWrapper = $("#all-projects_wrapper");

            search.addClass("form-control");
            pageBtn.addClass("btn btn-secondary");
            pageBtn.css("margin", "0px 5px")
            dropdown.addClass("form-control");
            projectWrapper.css("display", "flex");
            projectWrapper.css("flex-flow", "row wrap");
            projectWrapper.css("justify-content", "space-between");
        });
    </script>

    <!--! testing out C# List to JavaScript array -->
    <script type="text/javascript">
    const testArray = @Html.Raw(Json.Encode(Model));
    console.log(testArray);
    </script>
}

<div>
    <div class="card">
        <div class="header">
            <h4 class="title">@ViewBag.Title</h4>
            <p class="category">
                <a href="@Url.Action("Create")">
                    Create New Project
                    <i style="position: relative; top: 5px; font-weight: 500; font-size:25px;"
                       class="pe-7s-note"></i>
                </a>
            </p>
        </div>
        <div class="content">
            @if (Model.Any())
            {
                <table id="all-projects" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model[0].Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].DateCreated)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model[0].DateUpdated)
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateCreated)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.DateUpdated)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
</div>

