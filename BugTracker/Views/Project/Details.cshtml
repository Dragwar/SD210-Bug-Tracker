@model ProjectDetailsViewModel

@{
    ViewBag.Title = Model.Name;
}

@section Styles
{
    @Styles.Render(@"~/data-tables/css")
    <style type="text/css">
        .card div.legend {
            display: flex;
            flex-flow: column;
            align-items: flex-start;
        }

            .card div.legend * {
                padding: 0px;
                margin: 0px;
                font-size: small;
            }
    </style>
}

@section Scripts
{
    @Scripts.Render(@"~/data-tables/js")
    <script type="text/javascript" src="~/Scripts/MyScripts/DataTablesProjectDetails.js"></script>
    <script type="text/javascript" src="~/Scripts/MyScripts/DataTablesProjectAll.js"></script>
}


<div class="col-lg-4">
    <div class="card">
        <div class="header">
            <h4 class="title">@ViewBag.Title</h4>
            <p class="category">
                Details
            </p>
        </div>
        <div class="content">

            <div>
                <strong>
                    @Html.DisplayNameFor(model => model.Name) :
                </strong>
                <span>
                    @Html.DisplayFor(model => model.Name)
                </span>
            </div>

            <div>
                <strong>
                    @Html.DisplayNameFor(model => model.UsersCount) :
                </strong>
                <span>
                    @Html.DisplayFor(model => model.UsersCount)
                </span>
            </div>

            <div>
                <strong>
                    @Html.DisplayNameFor(model => model.TicketCount) :
                </strong>
                <span>
                    @Html.DisplayFor(model => model.TicketCount)
                </span>
            </div>

            <div>
                <strong>
                    @Html.DisplayNameFor(model => model.DateCreated) :
                </strong>
                <span>
                    @Html.DisplayFor(model => model.DateCreated)
                </span>
            </div>

            @if (Model.DateUpdated.HasValue)
            {
                <div>
                    <strong>
                        @Html.DisplayNameFor(model => model.DateUpdated) :
                    </strong>
                    <span>
                        @Html.DisplayFor(model => model.DateUpdated)
                    </span>
                </div>
            }

            <div class="footer">
                <div class="legend">
                    <p>
                        <i class="fa fa-circle text-info"></i> @Html.ActionLink("See My Projects", nameof(ProjectController.Index))
                    </p>
                    @if (User.IsInRole(nameof(UserRolesEnum.Admin)) || User.IsInRole(nameof(UserRolesEnum.ProjectManager)))
                    {
                        <p>
                            <i class="fa fa-circle text-primary"></i> 
                            @Html.ActionLink("See All Projects", nameof(ProjectController.All))
                        </p>
                        <p>
                            <i class="fa fa-circle text-warning"></i> 
                            @Html.ActionLink(nameof(ProjectController.Edit), nameof(ProjectController.Edit), new { id = Model.Id })
                        </p>
                    }
                </div>
                <hr />
                <div class="stats">
                    @if (Model.DateUpdated.HasValue)
                    {
                        <i class="fa fa-history"></i><span> Last Update: @Model.DateUpdated.Value.GetDateTimeFromNow()</span>
                    }
                    else
                    {
                        <i class="fa fa-history"></i><span> Created: @Model.DateCreated.GetDateTimeFromNow("Now")</span>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="col-lg-8">
    <div class="card">
        <div class="header">
            <h4 class="title">Assigned Users</h4>
            <p class="category">
                @Model.Name's users
            </p>
        </div>
        <div class="content">
            @if (Model.Users.Any())
            {
                <table id="project-users" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <td>Display Name</td>
                            <td>Email</td>
                            <td>Roles</td>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (HelperUserViewModel user in Model.Users)
                        {
                            <tr>
                                <td>@user.DisplayName</td>
                                <td>@user.Email</td>

                                @if (user.Roles.Any())
                                {
                                    <td>
                                        <small class="small">@string.Join(", ", user.Roles.Select(role => role.Name))</small>
                                    </td>
                                }
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-danger">No users assigned to project</p>
            }
        </div>
    </div>
</div>


<div class="col-lg-12">
    <div class="card">
        <div class="header">
            <h4 class="title">@Model.Name's Tickets</h4>
            <p class="category">
                @if (User.IsInRole(nameof(UserRolesEnum.Submitter)))
                {
                    <a href="@Url.Action(nameof(TicketController.Create), "Ticket", new { projectId = Model.Id })">
                        Create New Ticket For @Model.Name
                        <i style="position: relative; top: 5px; font-weight: 500; font-size:25px;" class="pe-7s-note"></i>
                    </a>
                }
            </p>
        </div>
        <div class="content">
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })

            @if (Model.Tickets?.Any() != null)
            {
                <table id="all-projects" class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Tickets[0].Title)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Tickets[0].Priority)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Tickets[0].Type)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Tickets[0].Status)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Tickets[0].DateCreated)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Tickets[0].DateUpdated)
                            </th>
                            <!--
                                <th>
                                    @@Html.DisplayNameFor(model => model[0].AuthorName)
                                </th>
                                <th>
                                    @@Html.DisplayNameFor(model => model[0].AssignedUserName)
                                </th>
                            -->
                            <th><i style="font-size: 16px; font-weight: 600;" class="pe-7s-link"></i></th>
                            <th><i style="font-size: 16px; font-weight: 600;" class="pe-7s-comment"></i></th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (TicketIndexViewModel ticket in Model.Tickets)
                        {
                            bool canEditTicket = User.IsInRole(nameof(UserRolesEnum.Admin)) ||
                                        User.IsInRole(nameof(UserRolesEnum.ProjectManager)) ||
                                        (User.IsInRole(nameof(UserRolesEnum.Submitter)) && ticket.IsCurrentUserTheAuthorOrIsAssigned) ||
                                        (User.IsInRole(nameof(UserRolesEnum.Developer)) && ticket.IsCurrentUserTheAuthorOrIsAssigned);
                            <tr>
                                <td>
                                    @ticket.Title
                                </td>
                                <td>
                                    @ticket.Priority
                                </td>
                                <td>
                                    @ticket.Type
                                </td>
                                <td>
                                    @ticket.Status
                                </td>
                                <td>
                                    @ticket.DateCreated.ToShortDateString()
                                </td>
                                <td>
                                    @(ticket.DateUpdated?.ToShortDateString())
                                </td>
                                <!--
                                    <td>
                                        @@ticket.AuthorName
                                    </td>
                                    <td>
                                        @@ticket.AssignedUserName
                                    </td>
                                -->
                                <td>@ticket.AttachmentCount</td>
                                <td>@ticket.CommentCount</td>
                                <td>
                                    @if (canEditTicket)
                                    {
                                        <a class="small text-muted" href="@Url.Action(nameof(TicketController.Edit), "Ticket", new { Id = ticket.Id })">
                                            @nameof(ProjectController.Edit) <i style="font-size:150%; font-weight: 600; position: relative; top: 3px;" class="pe-7s-tools"></i>
                                        </a>
                                        <div style="margin: 0px 6px;"></div>
                                    }
                                    <a class="small text-muted" href="@Url.Action(nameof(TicketController.Details), "Ticket", new { Id = ticket.Id })">
                                        @nameof(ProjectController.Details) <i style="font-size:150%; font-weight: 600; position: relative; top: 3px;" class="pe-7s-info"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <p class="text-danger">You have no tickets</p>
            }
        </div>
    </div>
</div>